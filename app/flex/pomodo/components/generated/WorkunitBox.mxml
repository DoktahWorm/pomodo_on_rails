<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" label="Workunit"
  xmlns:rcomponents="org.ruboss.components.*">
<mx:Script><![CDATA[
  import org.ruboss.Ruboss;
  import org.ruboss.utils.RubossUtils;
  import pomodo.models.Workunit;
  import pomodo.models.User;
  import pomodo.models.Task;

  [Bindable]
  private var _workunit:Workunit = new Workunit();

  private function newWorkunit():void {
    _workunit = new Workunit();
    workunitsList.selectedIndex = -1;
  }

  private function saveWorkunit():void {
    if (_workunit.id) {
      updateWorkunit();
    } else {
      createWorkunit();
    }
  }
  
  private function createWorkunit():void {
    var workunit:Workunit = new Workunit();
    workunit.startedOn = startedOnDateTimeTextInput.date;
    workunit.endedOn = endedOnDateTimeTextInput.date;

    workunit.user = User(userComboBox.selectedItem);
    workunit.task = Task(taskComboBox.selectedItem);
    workunit.create({afterCallback: onWorkunitCreate});
  }

  private function updateWorkunit():void {
    _workunit.startedOn = startedOnDateTimeTextInput.date;
    _workunit.endedOn = endedOnDateTimeTextInput.date;

    _workunit.user = User(userComboBox.selectedItem);
    _workunit.task = Task(taskComboBox.selectedItem);
    _workunit.update({afterCallback: onWorkunitUpdate});
  }

  private function destroyWorkunit():void {
    _workunit.destroy({afterCallback: onWorkunitDestroy});
  }
  
  private function onWorkunitSelect():void {
    _workunit = RubossUtils.clone(workunitsList.selectedItem) as Workunit;
  }
  
  private function onWorkunitCreate(workunit:Workunit):void {
    _workunit = new Workunit;
  }
  
  private function onWorkunitUpdate(workunit:Workunit):void {
    workunitsList.selectedItem = workunit;
    _workunit = RubossUtils.clone(workunit) as Workunit;
  }
  
  private function onWorkunitDestroy(workunit:Workunit):void {
    onWorkunitCreate(workunit);
  }

  private function canDeleteWorkunit(workunit:Workunit):Boolean {
    return workunit != null && workunit.id != 0;
  }
]]></mx:Script>
  <mx:Panel id="workunitsPanel"
    title="Workunits" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid" 
    borderThickness="1" backgroundColor="#EEEEEE" width="25%" height="100%">
    <mx:List id="workunitsList"
      width="100%" height="100%"
      dataProvider="{Ruboss.models.index(Workunit)}"
      change="onWorkunitSelect()"/>
    <mx:ControlBar width="100%">
      <mx:Button label="New Workunit" width="100%" height="30"
        click="newWorkunit()"/>
    </mx:ControlBar>
  </mx:Panel>
  <mx:Panel title="Edit Workunit" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid" 
    borderThickness="1" backgroundColor="#EEEEEE" width="75%" height="100%">
    <mx:Form width="100%" height="100%">
      <mx:FormItem label="StartedOn" width="100%">
        <rcomponents:DateTimeTextInput id="startedOnDateTimeTextInput" width="200" date="{_workunit.startedOn}"/>
      </mx:FormItem>
      <mx:FormItem label="EndedOn" width="100%">
        <rcomponents:DateTimeTextInput id="endedOnDateTimeTextInput" width="200" date="{_workunit.endedOn}"/>
      </mx:FormItem>
      <mx:FormItem label="User" width="100%">
        <mx:ComboBox id="userComboBox" width="200"
          labelField="{User.LABEL}"
          dataProvider="{Ruboss.models.index(User)}" prompt="User ..."
          selectedItem="{_workunit.user}" />
      </mx:FormItem>
      <mx:FormItem label="Task" width="100%">
        <mx:ComboBox id="taskComboBox" width="200"
          labelField="{Task.LABEL}"
          dataProvider="{Ruboss.models.index(Task)}" prompt="Task ..."
          selectedItem="{_workunit.task}" />
      </mx:FormItem>
    </mx:Form>
    <mx:ControlBar width="100%">
      <mx:Button label="Save Workunit" width="50%" height="30"
        click="saveWorkunit()"/>
      <mx:Button label="Delete Workunit" width="50%" height="30"
        enabled="{canDeleteWorkunit(_workunit)}"
        click="destroyWorkunit()"/>
    </mx:ControlBar>
  </mx:Panel>
</mx:HBox>