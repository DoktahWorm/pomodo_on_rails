<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" label="ProjectCategory"
  xmlns:rcomponents="org.ruboss.components.*">
<mx:Script><![CDATA[
  import org.ruboss.Ruboss;
  import org.ruboss.utils.RubossUtils;
  import pomodo.models.ProjectCategory;

  [Bindable]
  private var _projectCategory:ProjectCategory = new ProjectCategory();

  private function newProjectCategory():void {
    _projectCategory = new ProjectCategory();
    projectCategoriesList.selectedIndex = -1;
  }

  private function saveProjectCategory():void {
    if (_projectCategory.id) {
      updateProjectCategory();
    } else {
      createProjectCategory();
    }
  }
  
  private function createProjectCategory():void {
    var projectCategory:ProjectCategory = new ProjectCategory();
    projectCategory.name = nameTextInput.text;
    projectCategory.description = descriptionTextArea.text;

    projectCategory.create({afterCallback: onProjectCategoryCreate});
  }

  private function updateProjectCategory():void {
    _projectCategory.name = nameTextInput.text;
    _projectCategory.description = descriptionTextArea.text;

    _projectCategory.update({afterCallback: onProjectCategoryUpdate});
  }

  private function destroyProjectCategory():void {
    _projectCategory.destroy({afterCallback: onProjectCategoryDestroy});
  }
  
  private function onProjectCategorySelect():void {
    _projectCategory = RubossUtils.clone(projectCategoriesList.selectedItem) as ProjectCategory;
  }
  
  private function onProjectCategoryCreate(projectCategory:ProjectCategory):void {
    _projectCategory = new ProjectCategory;
  }
  
  private function onProjectCategoryUpdate(projectCategory:ProjectCategory):void {
    projectCategoriesList.selectedItem = projectCategory;
    _projectCategory = RubossUtils.clone(projectCategory) as ProjectCategory;
  }
  
  private function onProjectCategoryDestroy(projectCategory:ProjectCategory):void {
    onProjectCategoryCreate(projectCategory);
  }

  private function canDeleteProjectCategory(projectCategory:ProjectCategory):Boolean {
    return projectCategory != null && projectCategory.id != 0;
  }
]]></mx:Script>
  <mx:Panel id="projectCategoriesPanel"
    title="ProjectCategories" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid" 
    borderThickness="1" backgroundColor="#EEEEEE" width="25%" height="100%">
    <mx:List id="projectCategoriesList"
      width="100%" height="100%"
      dataProvider="{Ruboss.models.index(ProjectCategory)}"
      change="onProjectCategorySelect()"/>
    <mx:ControlBar width="100%">
      <mx:Button label="New ProjectCategory" width="100%" height="30"
        click="newProjectCategory()"/>
    </mx:ControlBar>
  </mx:Panel>
  <mx:Panel title="Edit ProjectCategory" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid" 
    borderThickness="1" backgroundColor="#EEEEEE" width="75%" height="100%">
    <mx:Form width="100%" height="100%">
      <mx:FormItem label="Name" width="100%">
        <mx:TextInput id="nameTextInput" width="100%" text="{_projectCategory.name}"/>
      </mx:FormItem>
      <mx:FormItem label="Description" width="100%">
        <mx:TextArea id="descriptionTextArea" width="100%" height="200" text="{_projectCategory.description}"/>
      </mx:FormItem>
    </mx:Form>
    <mx:ControlBar width="100%">
      <mx:Button label="Save ProjectCategory" width="50%" height="30"
        click="saveProjectCategory()"/>
      <mx:Button label="Delete ProjectCategory" width="50%" height="30"
        enabled="{canDeleteProjectCategory(_projectCategory)}"
        click="destroyProjectCategory()"/>
    </mx:ControlBar>
  </mx:Panel>
</mx:HBox>