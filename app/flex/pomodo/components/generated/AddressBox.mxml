<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" label="Address"
  xmlns:rcomponents="org.ruboss.components.*">
<mx:Script><![CDATA[
  import org.ruboss.Ruboss;
  import org.ruboss.utils.RubossUtils;
  import pomodo.models.Address;

  [Bindable]
  private var _address:Address = new Address();

  private function newAddress():void {
    _address = new Address();
    addressesList.selectedIndex = -1;
  }

  private function saveAddress():void {
    if (_address.id) {
      updateAddress();
    } else {
      createAddress();
    }
  }
  
  private function createAddress():void {
    var address:Address = new Address();
    address.lineOne = lineOneTextInput.text;
    address.lineTwo = lineTwoTextInput.text;
    address.city = cityTextInput.text;
    address.province = provinceTextInput.text;
    address.country = countryTextInput.text;
    address.postcode = postcodeTextInput.text;

    address.create({afterCallback: onAddressCreate});
  }

  private function updateAddress():void {
    _address.lineOne = lineOneTextInput.text;
    _address.lineTwo = lineTwoTextInput.text;
    _address.city = cityTextInput.text;
    _address.province = provinceTextInput.text;
    _address.country = countryTextInput.text;
    _address.postcode = postcodeTextInput.text;

    _address.update({afterCallback: onAddressUpdate});
  }

  private function destroyAddress():void {
    _address.destroy({afterCallback: onAddressDestroy});
  }
  
  private function onAddressSelect():void {
    _address = RubossUtils.clone(addressesList.selectedItem) as Address;
  }
  
  private function onAddressCreate(address:Address):void {
    _address = new Address;
  }
  
  private function onAddressUpdate(address:Address):void {
    addressesList.selectedItem = address;
    _address = RubossUtils.clone(address) as Address;
  }
  
  private function onAddressDestroy(address:Address):void {
    onAddressCreate(address);
  }

  private function canDeleteAddress(address:Address):Boolean {
    return address != null && address.id != 0;
  }
]]></mx:Script>
  <mx:Panel id="addressesPanel"
    title="Addresses" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid" 
    borderThickness="1" backgroundColor="#EEEEEE" width="25%" height="100%">
    <mx:List id="addressesList"
      width="100%" height="100%"
      dataProvider="{Ruboss.models.index(Address)}"
      change="onAddressSelect()"/>
    <mx:ControlBar width="100%">
      <mx:Button label="New Address" width="100%" height="30"
        click="newAddress()"/>
    </mx:ControlBar>
  </mx:Panel>
  <mx:Panel title="Edit Address" cornerRadius="0" dropShadowEnabled="false" borderStyle="solid" 
    borderThickness="1" backgroundColor="#EEEEEE" width="75%" height="100%">
    <mx:Form width="100%" height="100%">
      <mx:FormItem label="LineOne" width="100%">
        <mx:TextInput id="lineOneTextInput" width="100%" text="{_address.lineOne}"/>
      </mx:FormItem>
      <mx:FormItem label="LineTwo" width="100%">
        <mx:TextInput id="lineTwoTextInput" width="100%" text="{_address.lineTwo}"/>
      </mx:FormItem>
      <mx:FormItem label="City" width="100%">
        <mx:TextInput id="cityTextInput" width="100%" text="{_address.city}"/>
      </mx:FormItem>
      <mx:FormItem label="Province" width="100%">
        <mx:TextInput id="provinceTextInput" width="100%" text="{_address.province}"/>
      </mx:FormItem>
      <mx:FormItem label="Country" width="100%">
        <mx:TextInput id="countryTextInput" width="100%" text="{_address.country}"/>
      </mx:FormItem>
      <mx:FormItem label="Postcode" width="100%">
        <mx:TextInput id="postcodeTextInput" width="100%" text="{_address.postcode}"/>
      </mx:FormItem>
    </mx:Form>
    <mx:ControlBar width="100%">
      <mx:Button label="Save Address" width="50%" height="30"
        click="saveAddress()"/>
      <mx:Button label="Delete Address" width="50%" height="30"
        enabled="{canDeleteAddress(_address)}"
        click="destroyAddress()"/>
    </mx:ControlBar>
  </mx:Panel>
</mx:HBox>